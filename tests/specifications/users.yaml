openapi: 3.0.0
info:
  title: API
  version: '1.0'
paths:
  /users:
    get:
      summary: 'Get all users'
      operationId: users.index
      parameters:
        -
          name: perPage
          in: query
          description: 'Number of results'
          required: false
          schema:
            type: integer
            default: 6
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Users
          content:
            application/json:
              schema:
                allOf:
                  - { $ref: '#components/schemas/paginate' }
                  - { required: [data], properties: { data: { type: array, items: { $ref: '#components/schemas/user' } } }, type: object }
        '401':
          $ref: '#components/responses/401'
      security:
        -
          JWT: []
  '/user/{id}':
    get:
      summary: 'Get user for id'
      operationId: users.user
      parameters:
        -
          name: id
          in: path
          description: 'User id'
          schema:
            type: integer
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data: { $ref: '#/components/schemas/user' }
                type: object
        '401':
          $ref: '#components/responses/401'
      security:
        -
          JWT: []
components:
  schemas:
    user:
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        dob:
          type: string
          nullable: true
      type: object
    paginate:
      properties:
        links:
          schema: links
          properties:
            first:
              type: string
            last:
              type: string
              nullable: true
            prev:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
          type: object
        meta:
          schema: meta
          properties:
            current_page:
              type: integer
            from:
              type: integer
              nullable: true
            to:
              type: integer
              nullable: true
            per_page:
              type: integer
            path:
              type: string
          type: object
      type: object
  responses:
    '200':
      description: Success
    '401':
      description: Unauthorized
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Bearer JWT Token'
      name: Authorization
      in: header
